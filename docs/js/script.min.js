"use strict";const burger=document.querySelector(".burger"),header=document.querySelector(".header"),body=document.querySelector("body");window.addEventListener("load",()=>{function s(){burger.classList.contains("active")&&(burger.classList.remove("active"),menu.classList.remove("active"),header.classList.remove("active"),body.classList.remove("lock"),window.removeEventListener("scroll",s))}burger&&body.addEventListener("click",function(e){e.target.closest(".burger")?burger.classList.contains("active")?(burger.classList.remove("active"),header.classList.remove("active"),body.classList.remove("lock")):(burger.classList.add("active"),header.classList.add("active"),body.classList.add("lock"),window.addEventListener("scroll",s)):e.target.closest(".burger")||e.target.closest(".menu")||(burger.classList.remove("active"),header.classList.remove("active"),body.classList.remove("lock"),window.removeEventListener("scroll",s))})}),new Swiper(".swiper",{keyboard:{enabled:!0,onlyInViewport:!0,pageUpDown:!0},speed:600,direction:"vertical",mousewheel:!0,pagination:{el:".hero__pagination",clickable:!0,renderBullet:function(e,s){e=(e+1).toString().padStart(2,"0");let t='<span class="bullet-number">'+e+"</span>";return s.includes("swiper-pagination-bullet-active")&&(t='<span class="bullet-number bullet-active">'+e+"</span>"),'<span class="'+s+'">'+t+"</span>"}},slidesPerView:1,spaceBetween:30});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
